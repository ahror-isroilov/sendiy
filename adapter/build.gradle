plugins {
    id "org.jooq.jooq-codegen-gradle" version "3.19.10"
}

group = 'com'
version = '3.19.10'

ext.useJooq = true

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def jooqStarter = 'org.springframework.boot:spring-boot-starter-jooq'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'com.zaxxer:HikariCP:6.0.0'
    implementation jooqStarter

    jooqCodegen jooqStarter
    jooqCodegen 'org.postgresql:postgresql'
    runtimeOnly 'org.postgresql:postgresql'
}

jooq {
    version = "3.19.10"
    configuration {
        jdbc {
            driver = "org.postgresql.Driver"
            url = "jdbc:postgresql://localhost:5432/sendiy"
            user = "sendiy"
            password = "HG3Uzm9f"
        }
        generator {
            database {
                name = "org.jooq.meta.postgres.PostgresDatabase"
                includes = ".*"
                inputSchema = "public"
                target {
                    packageName = "com.sendiy.common.jooq"
                    directory = "src/main/java"
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
}