/*
 * This file is generated by jOOQ.
 */
package com.sendiy.common.jooq.tables.records;


import com.sendiy.common.jooq.tables.RefreshTokens;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RefreshTokensRecord extends UpdatableRecordImpl<RefreshTokensRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.refresh_tokens.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.refresh_tokens.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.refresh_tokens.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.refresh_tokens.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.refresh_tokens.token</code>.
     */
    public void setToken(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.refresh_tokens.token</code>.
     */
    public String getToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.refresh_tokens.expiry_date</code>.
     */
    public void setExpiryDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.refresh_tokens.expiry_date</code>.
     */
    public LocalDateTime getExpiryDate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RefreshTokensRecord
     */
    public RefreshTokensRecord() {
        super(RefreshTokens.REFRESH_TOKENS);
    }

    /**
     * Create a detached, initialised RefreshTokensRecord
     */
    public RefreshTokensRecord(Long id, UUID userId, String token, LocalDateTime expiryDate) {
        super(RefreshTokens.REFRESH_TOKENS);

        setId(id);
        setUserId(userId);
        setToken(token);
        setExpiryDate(expiryDate);
        resetChangedOnNotNull();
    }
}
