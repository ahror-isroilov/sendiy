/*
 * This file is generated by jOOQ.
 */
package com.sendiy.common.jooq.tables.records;


import com.sendiy.common.jooq.enums.UserStatus;
import com.sendiy.common.jooq.tables.Users;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * this is general user table
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.users.firstname</code>.
     */
    public void setFirstname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.users.firstname</code>.
     */
    public String getFirstname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.lastname</code>.
     */
    public void setLastname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.users.lastname</code>.
     */
    public String getLastname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.phone</code>.
     */
    public void setPhone(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.users.phone</code>.
     */
    public String getPhone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.users.email</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.users.password_hash</code>.
     */
    public void setPasswordHash(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.users.password_hash</code>.
     */
    public String getPasswordHash() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.users.role_id</code>.
     */
    public void setRoleId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.users.role_id</code>.
     */
    public Long getRoleId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.users.avatar_id</code>.
     */
    public void setAvatarId(UUID value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.users.avatar_id</code>.
     */
    public UUID getAvatarId() {
        return (UUID) get(7);
    }

    /**
     * Setter for <code>public.users.bio</code>.
     */
    public void setBio(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.users.bio</code>.
     */
    public String getBio() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.users.status</code>.
     */
    public void setStatus(UserStatus value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.users.status</code>.
     */
    public UserStatus getStatus() {
        return (UserStatus) get(9);
    }

    /**
     * Setter for <code>public.users.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.users.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>public.users.created_by</code>.
     */
    public void setCreatedBy(UUID value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.users.created_by</code>.
     */
    public UUID getCreatedBy() {
        return (UUID) get(11);
    }

    /**
     * Setter for <code>public.users.modified_at</code>.
     */
    public void setModifiedAt(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.users.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>public.users.modified_by</code>.
     */
    public void setModifiedBy(UUID value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.users.modified_by</code>.
     */
    public UUID getModifiedBy() {
        return (UUID) get(13);
    }

    /**
     * Setter for <code>public.users.deleted_date</code>.
     */
    public void setDeletedDate(LocalDateTime value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.users.deleted_date</code>.
     */
    public LocalDateTime getDeletedDate() {
        return (LocalDateTime) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(UUID id, String firstname, String lastname, String phone, String email, String passwordHash, Long roleId, UUID avatarId, String bio, UserStatus status, LocalDateTime createdAt, UUID createdBy, LocalDateTime modifiedAt, UUID modifiedBy, LocalDateTime deletedDate) {
        super(Users.USERS);

        setId(id);
        setFirstname(firstname);
        setLastname(lastname);
        setPhone(phone);
        setEmail(email);
        setPasswordHash(passwordHash);
        setRoleId(roleId);
        setAvatarId(avatarId);
        setBio(bio);
        setStatus(status);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setModifiedAt(modifiedAt);
        setModifiedBy(modifiedBy);
        setDeletedDate(deletedDate);
        resetChangedOnNotNull();
    }
}
